# This is a basic workflow to help you get started with Actions

name: Docker Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths-ignore: 
      - "dockerfile/**"
      - "deployment/**"
      - "charts/**"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "dockerfile/**"
      - "deployment/**"
      - "charts/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_REPOSITORY: ghcr.io/micya
  IMAGE_NAME: webapp

  GHCR_PAT: ${{ secrets.GHCR_PAT }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: linux
      DOCKERFILE: dockerfile/linux.dockerfile

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Generate env variables
      - name: Generate env variables
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "IMAGE_ID=$IMAGE_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG-$GIT_HASH" >> $GITHUB_ENV 

      # Build docker image
      - name: Docker build
        run: |
          echo "Building image: $IMAGE_ID"
          docker build -f $DOCKERFILE -t $IMAGE_ID .
          
      - name: GitHub container registry login
        run: |
          echo "Logging in to container registry"
          echo $GHCR_PAT | docker login ghcr.io -u USERNAME --password-stdin
          
      - name: Docker push
        run: |
          echo "Pushing image: $IMAGE_ID"
          docker push $IMAGE_ID

  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    env:
      IMAGE_TAG: windows
      DOCKERFILE: dockerfile/windows.dockerfile

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Generate env variables
      - name: Generate env variables
        run: |
          ${env:GIT_HASH}=git rev-parse --short "${env:GITHUB_SHA}"
          echo IMAGE_ID="${env:IMAGE_REPOSITORY}/${env:IMAGE_NAME}:${env:IMAGE_TAG}-${env:GIT_HASH}" >> ${env:GITHUB_ENV}

      # Build docker image
      - name: Docker build
        run: |
          echo "Building image: ${env:IMAGE_ID}"
          docker build -f ${env:DOCKERFILE} -t ${env:IMAGE_ID} .
          
      - name: GitHub container registry login
        run: |
          echo "Logging in to container registry"
          echo ${env:GHCR_PAT} | docker login ghcr.io -u USERNAME --password-stdin
          
      - name: Docker push
        run: |
          echo "Pushing image: ${env:IMAGE_ID}"
          docker push ${env:IMAGE_ID}
