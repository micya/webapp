# This is a basic workflow to help you get started with Actions

name: Docker Manifest

# Controls when the action will run. 
on:
  workflow_run:
    workflows:
      - "Docker Linux"
      - "Docker Windows"
    branches:
      - "main"
    types:
      - "completed"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_REPOSITORY: ghcr.io/micya
  IMAGE_NAME: webapp
  LINUX_IMAGE_TAG: linux
  WINDOWS_IMAGE_TAG: windows

  GHCR_PAT: ${{ secrets.GHCR_PAT }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Generate env variables
      - name: Generate env variables
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "GIT_HASH=$GIT_HASH" >> $GITHUB_ENV

          echo "LINUX_IMAGE_ID=$IMAGE_REPOSITORY/$IMAGE_NAME:$LINUX_IMAGE_TAG-$GIT_HASH" >> $GITHUB_ENV 
          echo "WINDOWS_IMAGE_ID=$IMAGE_REPOSITORY/$IMAGE_NAME:$WINDOWS_IMAGE_TAG-$GIT_HASH" >> $GITHUB_ENV

          echo "MANIFEST_ID=$IMAGE_REPOSITORY/$IMAGE_NAME:$GIT_HASH" >> $GITHUB_ENV
          echo "MANIFEST_LATEST_ID=$IMAGE_REPOSITORY/$IMAGE_NAME" >> $GITHUB_ENV

      # Build docker image
      - name: Docker create manifest
        run: |
          echo "Building manifest"
          docker manifest create $MANIFEST_ID \
              --amend $LINUX_IMAGE_ID \
              --amend $WINDOWS_IMAGE_ID

      - name: Docker create latest manifest
        run: |
          echo "Building latest manifest"
          docker manifest create $MANIFEST_LATEST_ID \
              --amend $LINUX_IMAGE_ID \
              --amend $WINDOWS_IMAGE_ID
          
      - name: GitHub container registry login
        run: |
          echo "Logging in to container registry"
          echo $GHCR_PAT | docker login ghcr.io -u USERNAME --password-stdin
          
      - name: Docker push manifests
        run: |
          docker manifest push $MANIFEST_ID
          docker manifest push $MANIFEST_LATEST_ID

